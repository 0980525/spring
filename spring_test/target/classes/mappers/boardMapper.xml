<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.ezen.www.repository.BoardDAO">
  
 	 <insert id="insert" parameterType="com.ezen.www.domain.BoardVO"> 
 	 	insert into board(title,writer,content) 
 	 	values(#{title},#{writer},#{content})
 	 </insert>
 	 
 	 <select id="selectList" resultType="com.ezen.www.domain.BoardVO">
 	 	select * from board 
 	 	where 
 	 	isDel = 'N' 
 	 	<include refid="search"></include>
 	 	order by bno desc 
 	 	limit #{pageStart},#{qty}
 	 </select>
 	 
 	 <select id="getDetail" resultType="com.ezen.www.domain.BoardVO">
 	 	select * from board 
 	 	where bno=#{bno}
 	 </select>
 	 
 	 <update id="readCntUpdate">
 	 	update board set 
 	 	read_count = read_count+1 
 	 	where bno= #{bno}
 	 </update>
 	 <update id="update">
 	 	update board set 
 	 	title=#{title},
 	 	content=#{content},
 	 	reg_date=now(),
 	 	read_count=read_count-2
 	 	where bno=#{bno}
 	 </update>
 	 <!-- isDel 을 사용하지 않고 게시글을 삭제함
 	 <delete id="delete">
 	 	delete from board where bno=#{bno}
 	 </delete> 
 	 -->
 	 <!-- isDel을 사용해서 게시글이 보이지 않지만 isDel="Y"인 형태로 db에 남아있음 -->
 	 <update id="delete">
 	 	update board set isDel="Y" where bno=#{bno}
 	 </update>
 	 
 	 <select id="getTotalCount" resultType="int">
 	 	select count(bno) from board 
 	 	where isDel="N"
 	 	<include refid="search"></include>
 	 </select>
 	 
 	 <select id="selectBno" resultType="int">
 	 	select max(bno)from board
 	 	<!-- select bno from board order by bno desc limit 0 -->
 	 </select>
 	 
 	 <!-- select * from board where isDel='N' and (or..or..or(prefixOverrides 로 뭔가 지움)) -->
 	 <!-- 옵션에서 "tw"등의 타입을 배열에서 검색을 하기위해 foreach사용 -->
	 <!-- <when test="type=='t'.toString()-'t'를 문자열로 인식하기 위해 toString"></when> -->
 	 <sql id="search">
 	 	<if test="type != null">
 	 		<trim prefix="and (" suffix=")" prefixOverrides="or">
 	 			<foreach collection="typeToArray" item="type">
 	 				<trim prefix="or">
 	 					<choose>
 	 						<when test="type=='t'.toString()">
 	 							title like concat('%',#{keyword},'%')
 	 						</when>
 	 						<when test="type=='w'.toString">
 	 							writer like concat('%',#{keyword},'%')
 	 						</when>
 	 						<when test="type=='c'.toString">
 	 							content like concat('%',#{keyword},'%')
 	 						</when>
 	 					</choose>
 	 				</trim>
 	 			</foreach>
 	 		</trim>
 	 	</if>
 	 </sql>
 	 
  </mapper>